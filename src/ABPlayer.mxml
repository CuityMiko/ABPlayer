<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:local="org.kanoha.video.*"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   x="0" y="0" width="100%" height="100%" minWidth="400" minHeight="300"
			   creationComplete="callLater(init)">
	<fx:Style source="css/style.css"/>
	<fx:Script>
		<![CDATA[
		import mx.controls.Alert;
		import mx.core.FlexGlobals;
		import mx.graphics.ImageSnapshot;
		import mx.graphics.codec.PNGEncoder;
		
		import org.kanoha.comment.Comment;
		import org.kanoha.comment.CommentConfig;
		import org.kanoha.comment.CommentFilter;
		import org.kanoha.comment.CommentManager;
		import org.kanoha.events.*;
		import org.kanoha.net.CommentLoader;
		import org.kanoha.net.CommentSender;
		import org.kanoha.net.VideoLoader;
		
		public var cmMgr:CommentManager;
		public var advCmMgr:CommentManager;
		public var filterMgr:CommentFilter;
		public var cmSettings:CommentConfig = new CommentConfig();
		public var mouseTimeout:int=-1;
		public var cl:CommentLoader = new CommentLoader("comment.xml");
		public var cs:CommentSender = new CommentSender("http://127.0.0.1/wp3/wp-admin/admin-ajax.php");
		public var cmntDisplay:Boolean=true;
		public var isFullscreen:Boolean = false;
		public function init():void{
			if(FlexGlobals.topLevelApplication.parameters.nolist=="true"){
				toggleSidebar(false);
			}
			stage.addEventListener(FullScreenEvent.FULL_SCREEN, onFullscreen);
			ABPVideo.addEventListener(NMEvent.VIDEO_NOT_FOUND,function():void{
				Alert.show('Video Not found');
			});
			ABPVideo.addEventListener(NMEvent.META_LOADED,function(eve:NMEvent):void{
				ABPCommentform.enabled=true;//Video has been completed!
				btnPlay.enabled=true;
				btnStop.enabled=true;
				infoLblProportions.text = ABPVideo.p_x + " x " + ABPVideo.p_y;
				ABPVideo.play();
				ABPVideo.stop();
				ABPTrack.maximum=ABPVideo.total;
			});
			ABPVideo.addEventListener(NMEvent.COMPLETE,function(event:NMEvent):void{
			ABPTrack.value=0;
				onPlayheadChange(new NMEvent(NMEvent.PLAY_HEAD_UPDATE,0));
			});
			ABPVideo.addEventListener(NMEvent.PROGRESS,function(event:NMEvent):void{
			//kk
			});
			ABPVideo.addEventListener(NMEvent.STATE_CHANGE,onStateChange);
			this.ABPVideo.addEventListener(NMEvent.PLAY_HEAD_UPDATE,onPlayheadChange);
			filterMgr = new CommentFilter();
			cmMgr = new CommentManager(commentStage2,cmSettings,filterMgr,false);
			advCmMgr = new CommentManager(commentStage1,cmSettings,filterMgr,true);
			if(FlexGlobals.topLevelApplication.parameters.vid!=null){
				loadVideo(FlexGlobals.topLevelApplication.parameters.mode,FlexGlobals.topLevelApplication.parameters.vid,FlexGlobals.topLevelApplication.parameters.comments);
			}else{
				//loadVideo("sina","56216390",'http://www.bilibili.tv/dm,56216390');
				//loadVideo("file","http://192.168.1.2/share/2.hlv","http://192.168.1.2/share/comment.xml");
				loadVideo("file","https://railgun.in/share/rokubunnoichi.flv",'https://railgun.in/share/rokubunnoichi.xml');
			}
			if(FlexGlobals.topLevelApplication.parameters.send!=null)
				cs.url = FlexGlobals.topLevelApplication.parameters.send;
			cl.addEventListener(LoaderEvent.COMMENT_COMPLETE,onCommentsLoaded);
			addCallbacks();
		}
		public function addCallbacks():void{
			ExternalInterface.addCallback("load",loadVideo);
			ExternalInterface.addCallback("seek",seekVideo);
			ExternalInterface.addCallback("set",setValues);
		}
		public function setValues(key:String,value:String):Boolean{
			if(key=="sidebar"){
				if(value=="false")
					toggleSidebar(false);
				else
					toggleSidebar(true);
			}
			return true;
		}
		public function seekVideo(seekPosition:int):Boolean{
			if(ABPVideo.getState() == NSComponent.UNLOAD)
				return false;//WHAT? Not loaded...
			return ABPVideo.seek(seekPosition);
		}
		public function loadVideo(loadMode:String,video:String,comment:String):int{
			if(ABPVideo.getState()==NSComponent.PLAY){
				ABPVideo.stop();
				cmMgr.clear();
				cmMgr.reset();
				advCmMgr.clear();
				advCmMgr.reset();
				ABPTrack.value=0;
			}
			if(loadMode=="file"){
				ABPVideo.initBySingleUrl(video);
			cl.load(comment);
			cs.vid = video;
			return 0;
		}else if(loadMode=="sina" || loadMode=="tudou"){
			var x:VideoLoader = new VideoLoader();
			if(loadMode=="tudou"){
				ABPVideo.allowCapture = false;//not for tudou
			}
			x.addEventListener(LoaderEvent.VIDEO_COMPLETE,function(e:LoaderEvent):void{
			var o:Object = e.info;
			ABPVideo.init(o.video,o.duration);
			ABPTrack.maximum = ABPVideo.total;
		});
		x.load(loadMode,video);
		cs.vid = video;
		cl.load(comment);
		return 0;
		}
		return -1;
		}
		/****** Event Handlers ******/
		public function onCommentsLoaded(eve:LoaderEvent):void{
		var t:Array = eve.info;
		cmMgr.provider = t;
		advCmMgr.provider = t;
		UICommentList = new ArrayCollection(t);
		}
		public function onPlayheadChange(eve:NMEvent):void{
		var time:int = Number(eve.info);
		var total:int = Number(ABPVideo.total/1000);
		var tmin:int = Math.floor(total/60);
		var tsec:int = Math.floor(total%60);
		var min:int = Math.floor((time/1000)/60);
		var sec:int = Math.floor(time/1000)%60;
		if(min<10){
		currentTime.text="0";
		}else{
		currentTime.text="";
		}
		currentTime.text+=min + ":";
		if(sec<10){
		currentTime.text+="0";
		}
		currentTime.text+=sec + " / ";
		if(tmin<10)
		currentTime.text += "0";
		currentTime.text+=tmin +":";
		if(tsec<10)
		currentTime.text+="0";
		currentTime.text+=tsec;
		if(ABPTrack.maximum >= time && updatePosition)
		ABPTrack.value = time;
		if(cmntDisplay){
		this.cmMgr.time(Math.floor(time));
		this.advCmMgr.time(Math.floor(time));
		}
		}
		public function onCommentTypeChange():void{
		if(CmntType.selectedItem.data=="7" || CmntType.selectedItem.data=="8"){
		toggleSidebar(true);
		frmSpecial.enabled=true;
		ABPSidebar.selectedIndex = 1;
		if(CmntType.selectedItem.data=="7"){
		AdvHRule.visible=true;
		AdvVRule.visible=true;
		AdvHRule.width = ABPVideo.video.width;
		AdvVRule.height= ABPVideo.video.height;
		}else if(CmntType.selectedItem.data=="8"){
		
		}
		}else{
		if(AdvHRule.visible || AdvVRule.visible){
		AdvHRule.visible = false;
		AdvVRule.visible = false;
		}
		if(frmSpecial.enabled){
		frmSpecial.enabled=false;
		ABPSidebar.selectedIndex = 0;
		}
		}
		}
		public function onCommentformKey(event:KeyboardEvent):void{
		if(event.keyCode==13 && !event.ctrlKey){
		cmntSend();
		}else if(event.keyCode==13 && event.ctrlKey){
		CmntText.text+="/n";
		}
		}
		public function onStateChange(eve:NMEvent):void{
		if(eve.info=="pause" || eve.info == "stop"){
		btnPlay.styleName="playBtn";
		}else if(eve.info=="play"){
		btnPlay.styleName="pauseBtn";
		}
		}
		public function onListDblClick(event:MouseEvent):void{
		if(ABPVideo.getState() == NSComponent.PLAY){
		ABPVideo.seek(int(CommentListGrid.selectedItem.stime));
		cmMgr.clear();
		}
		}
		public function onMouseMove(event:MouseEvent):void{
		if(!ABPController.visible){
		ABPController.visible=true;
		Mouse.show();
		mouseTimeout = setTimeout(function ():void{
		Mouse.hide();
		ABPController.visible=false;
		toggleSidebar(false);
		},5000);
		}else{
		if(mouseTimeout!=-1)
		clearTimeout(mouseTimeout);
		mouseTimeout = setTimeout(function ():void{
		Mouse.hide();
		ABPController.visible=false;
		toggleSidebar(false);
		},5000);
		}
		}
		private function onFullscreen(evt:FullScreenEvent):void{
		isFullscreen=evt.fullScreen;
		if(isFullscreen){
		toggleSidebar(false);
		btnFullScreen.styleName="ssBtn";
		ABPCommentform.visible=false;
		ABPVideoWrapper.setConstraintValue("bottom",0);
		ABPVideoWrapper.invalidateSize();
		stage.addEventListener(MouseEvent.MOUSE_MOVE,onMouseMove);
		}else{
		ABPCommentform.visible=true;
		btnFullScreen.styleName="fsBtn";
		ABPVideoWrapper.setConstraintValue("bottom",ABPController.height + ABPCommentform.height);
		ABPVideoWrapper.invalidateSize();
		stage.removeEventListener(MouseEvent.MOUSE_MOVE,onMouseMove);
		if(mouseTimeout!=-1){
		clearTimeout(mouseTimeout);
		Mouse.show();
		ABPController.visible=true;
		}
		}
		}
		private function commentAvoidAction(evt:Object):void{
		commentStage2.setConstraintValue("bottom",(ABPVideo.height - ABPVideo.video.height) + 30);
		commentStage2.invalidateSize();
		}
		/****** RUNNERS *******/
		public function cmntSend():void{
		if(CmntText.text!=""){
		/**** Process Commands Entered ****/
		if(CmntText.text=="::ScreenCapture"){
		if(ABPVideo.allowCapture){
		try{
		if(this.ABPVideo.getState()==NSComponent.PLAY){
		togglePlay();//Pause this
		}
		var image:ImageSnapshot = ImageSnapshot.captureImage(ABPVideoWrapper,150,new PNGEncoder());
		var file:FileReference = new FileReference();
		file.save(image.data,"screencap-" + ABPVideo.time + ".png");
		}catch(e:Error){
		//Seriously, ignore this
		}
		}//I see we don't have a chance
		CmntText.text="";
		return;
		}else if(CmntText.text=="Bili::给爷全屏"){
		toggleFullscreen(true);
		CmntText.text="";
		return;
		}else if(CmntText.text=="Bili::要看黑白电视"){
		ABPVideo.filterMode = "blackwhite";
		if(videoFilter!=null){
		videoFilter.selectedIndex=2;
		}
		CmntText.text="";
		return;
		}else if(CmntText.text=="Bili::还是看彩色电视吧"){
		ABPVideo.filterMode = "default";
		videoFilter.selectedIndex=0;
		CmntText.text="";
		return;
		}else if(CmntText.text=="::CPUFriendly"){
		cfgCPUfriendly.selected = true;
		toggleCPUMode();
		CmntText.text="";
		return;
		}else if(CmntText.text=="::ReloadComments"){
		cl.reload();
		CmntText.text="";
		return;
		}else if(CmntText.text=="::ClearStage"){
		cmMgr.clearContainer();
		advCmMgr.clearContainer();
		CmntText.text="";
		return;
		}
		/**** End Commands ****/
		var n:Object = {stime:ABPVideo.time + 2,text:CmntText.text,size:int(CmntSize.selectedItem.data),color:CmntColor.value,mode:uint(CmntType.selectedItem.data),border:true,date:new Date()};
		if(n.mode<6){
		cmMgr.insert(n);
		}else{
		advCmMgr.insert(n);
		}
		UICommentList.refresh();
		CmntText.text = "";
		cs.send(n);
		}
		}
		public function runCmntPos():void{
		return;//not implemented
		}
		public function deleteFilter():void{
			if(lstRule.selectedIndex >= 0 && filterMgr.removeFilterAt(UIFilterList.getItemAt(lstRule.selectedIndex).id,UIFilterList.getItemAt(lstRule.selectedIndex).mode)>=0 ){
				UIFilterList.removeItemAt(lstRule.selectedIndex);
			}
			if(UIFilterList.length==0){
				filterMgr.clear();
			}
			return;
		}
		public function fltaddFilter(filter:String):void{
			if(filter=="" || filter==null)
				return;
			var af:Object = filterMgr.addFilter(filter);
			if(af.id>=0){
				filterDef.text='';
				UIFilterList.addItem({filter:filter,id:af});
			}
		}
		/****** TOGGLERS ******/
		public function togglePlay():void{
		if(this.ABPVideo.getState()!=NSComponent.PLAY){
		this.ABPVideo.play();
		cmMgr.resume();
		advCmMgr.resume();
		btnPlay.styleName="pauseBtn";
		}else{
		this.ABPVideo.pause();
		cmMgr.pause();
		advCmMgr.pause();
		btnPlay.styleName="playBtn";
		}
		}
		public function toggleCmnt():void{
		if(cmntDisplay){
		btnCmnt.styleName="cmntOff";
		}else{
		btnCmnt.styleName="cmntOn";
		}
		cmntDisplay = !cmntDisplay;
		cmMgr.clear();
		advCmMgr.clear();
		}
		public function toggleSidebar(state:Boolean):void{
		//save status
		if(sidebarOverlay.visible==state){
		return;//Skip
		}
		if(!state){
		sidebarOverlay.visible=false;
		ABPCommentform.setConstraintValue("right",0);
		ABPVideoWrapper.setConstraintValue("right",0);
		btnConfig.styleName="cfgBtn";
		}else{
		sidebarOverlay.visible=true;
		ABPCommentform.setConstraintValue("right",sidebarOverlay.width);
		ABPVideoWrapper.setConstraintValue("right",sidebarOverlay.width);
		btnConfig.styleName="cfgSBtn";
		}
		}
		public function toggleFullscreen(state:Boolean):void{
		if(isFullscreen == state){
		return;//already is
		}else{
		if(state==true){
		try {
		stage.displayState = StageDisplayState.FULL_SCREEN;
		isFullscreen = state;
		} catch (err:SecurityError) {
		// ignore
		}
		}else{
		try{
		stage.displayState = StageDisplayState.NORMAL;
		isFullscreen = state;
		}catch(e:SecurityError){
		//ignore
		}
		}
		}
		}
		public function toggleCPUMode():void{
		cmMgr.cpufriendly = cfgCPUfriendly.selected;
		advCmMgr.cpufriendly = cfgCPUfriendly.selected;
		}
		public function toggleHardSubtitle():void{
		if(!cfgAvoidSubs.selected){
		commentStage2.setConstraintValue("bottom",0);
		ABPVideo.removeEventListener(Event.RESIZE,commentAvoidAction);
		}else{
		var bottom:int = (ABPVideo.height - ABPVideo.video.height) + 30;
		commentStage2.setConstraintValue("bottom",bottom);
		ABPVideo.addEventListener(Event.RESIZE,commentAvoidAction);
		}
		commentStage2.invalidateSize();//Refresh display
		}
		/****** Formatters ******/
		private function formatTime(item:Object, column:GridColumn):String{
		var seconds:int = (int)(Number(item.stime) / 1000 );
		var minutes:int = (int)(seconds / 60);
		var seconds_:int = (int)(seconds%60);
		var output:String="";
		if(seconds_>9)
		output=minutes + ":" + seconds_;
		else
		output=minutes + ":0" + seconds_;
		return output;
		}
		private function formatDataTip(item:Number):String {
		item = Math.round(item/1000);
		var minutes:int = (int)(item / 60);
		var seconds:int = (int)(item % 60);
		if(seconds>9)
		return String(minutes + ":" + seconds);
		else
		return String(minutes + ":0" + seconds);
		}
		private function formatDate(item:Object, column:GridColumn):String{
		return formatDateTime.format(item.date);
		}
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:DateFormatter id="formatDateTime" formatString="YYYY-MM-DD J:NN:SS"/>
		<mx:ArrayCollection id="UICommentList">
		</mx:ArrayCollection>
		<mx:ArrayCollection id="UIFilterList">
		</mx:ArrayCollection>
		<fx:Boolean id="sidebarShow">true</fx:Boolean>
		<fx:Boolean id="updatePosition">true</fx:Boolean>
		<s:RadioButtonGroup id="CmntExtra" change="cmSettings.setGlow(String(CmntExtra.selectedValue));"/>
	</fx:Declarations>
	<mx:Canvas id="ABPVideoWrapper" left="0" right="350" top="0" bottom="70" click="togglePlay();"
			   horizontalScrollPolicy="off" styleName="videoWrapper" verticalScrollPolicy="off">
		<local:NSComponent id="ABPVideo" left="0" right="0" top="0" bottom="0" smoothing="true"/>	
		<mx:Canvas verticalScrollPolicy="off" horizontalScrollPolicy="off" id="commentStage1" left="0" right="0" top="0" bottom="0"/>
		<mx:Canvas verticalScrollPolicy="off" horizontalScrollPolicy="off" id="commentStage2" left="0" right="0" top="0" bottom="0"/>
		<mx:HRule id="AdvHRule" visible="false" width="100%" height="1" horizontalCenter="0"
				  strokeColor="#1FF91F" verticalCenter="0"/>
		<mx:VRule id="AdvVRule" visible="false" width="1" height="100%" horizontalCenter="0"
				  strokeColor="#1FF91F" verticalCenter="0"/>
		<mx:Canvas id="ABPVideoInfo" visible="false" left="30" right="30" top="30" height="81"
				   backgroundAlpha="0.8" backgroundColor="#111111" horizontalScrollPolicy="off"
				   verticalScrollPolicy="off">
			<s:Label left="10" top="10" color="#FFFFFF" text="视频解析度"/>
			<s:Label id="infoLblProportions" left="83" right="10" top="10" color="#FFFFFF"
					  text="0 x 0"/>
			<s:Label left="10" top="41" color="#FFFFFF" text="当前视频文件大小"/>
			<s:Label id="infoLblFilesize" left="119" right="10" top="41" color="#FFFFFF"
					  text="0 bytes"/>
		</mx:Canvas>
	</mx:Canvas>
	<s:Group id="ABPController" left="0" right="0" bottom="0" height="40">
		<s:Button id="btnPlay" left="0" bottom="0" click="togglePlay();" enabled="false"
				   styleName="playBtn" toolTip="播放/暂停"/>
		<s:Button id="btnStop" left="50" bottom="0" click="this.ABPVideo.stop();" enabled="false"
				   styleName="stopBtn" toolTip="停止"/>
		<s:Button id="btnFullScreen" right="0" bottom="0" click="toggleFullscreen(!isFullscreen);"
				   styleName="fsBtn" toolTip="全屏幕"/>
		<s:Button id="btnConfig" right="30" bottom="0"
				   click="toggleSidebar(!sidebarOverlay.visible);" styleName="cfgSBtn"
				   toolTip="设置弹幕"/>
		<s:SkinnableContainer left="80" right="120" bottom="0" height="25" styleName="Bar">
			<s:Label id="currentTime" left="5" text="00:00 / 00:00" verticalCenter="0"/>
		</s:SkinnableContainer>
		<s:Button id="btnVolume" right="60" bottom="0" styleName="volume" toolTip="音量"/>
		<s:Button id="btnCmnt" right="90" bottom="0" click="toggleCmnt();" styleName="cmntOn"
				   toolTip="开启/关闭弹幕"/>
		<s:HSlider id="ABPTrack" left="10" right="10" top="2" height="10"
					dataTipFormatFunction="formatDataTip" mouseDown="updatePosition=false"
					mouseUp="ABPVideo.seek(ABPTrack.value);updatePosition=true;"/>
	</s:Group>
	<s:Group id="sidebarOverlay" right="0" top="0" bottom="40" width="350">
		<mx:TabNavigator id="ABPSidebar" left="0" right="0" top="0" bottom="0">
			<s:NavigatorContent id="frmCmntList" width="100%" height="100%" label="评论列表">
				<s:DataGrid id="CommentListGrid" left="0" right="0" top="0" bottom="0"
							 dataProvider="{UICommentList}" doubleClick="onListDblClick(event);"
							 doubleClickEnabled="true">
					<s:columns>
						<s:ArrayList>
							<s:GridColumn width="40" dataField="stime" headerText="时间"
											   labelFunction="formatTime"/>
							<s:GridColumn dataField="text" headerText="内容"/>
							<s:GridColumn width="100" dataField="date" headerText="发送时间"
											   labelFunction="formatDate"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:NavigatorContent>
			<s:NavigatorContent id="frmSpecial" width="100%" height="100%" label="高级弹幕" enabled="false">
				<mx:Accordion id="AdvancedCmnt" left="0" right="0" top="0" bottom="0"
							  selectedIndex="0">
					<s:NavigatorContent id="CmntAdvPosition" width="100%" height="100%" label="定位弹幕">
						
					</s:NavigatorContent>
					<s:NavigatorContent width="100%" height="100%" label="绘图弹幕">
						<s:Label left="10" top="6" text="脚本绘图"/>
						<s:TextArea id="CmntAdvDraw" left="10" right="10" top="31" bottom="43"
									 editable="true" enabled="true" text="//这里是脚本"/>
						<s:Button id="CmntAdvTest" right="10" bottom="8" label="测试运行"/>
					</s:NavigatorContent>
					<s:NavigatorContent width="100%" height="100%" label="点阵图片弹幕">
					</s:NavigatorContent>
				</mx:Accordion>
			</s:NavigatorContent>
			<s:NavigatorContent id="frmSettings" width="100%" height="100%" label="设置">
				<mx:Accordion left="0" right="0" top="0" bottom="0">
					<s:NavigatorContent width="100%" height="100%" label="播放器设置">
						<s:HSlider id="CmntTransparency" left="10" right="10" top="30"
									change="cmSettings.setStyle('alpha',CmntTransparency.value);"
									enabled="true" maximum="1.0" minimum="0.0" snapInterval="0.1"
									value="1.0"/>
						<s:Label left="10" top="10" text="弹幕透明度"/>
						<s:CheckBox id="abpToggleDebug" left="10" top="56" label="显示视频调试信息"
									 click="ABPVideoInfo.visible =abpToggleDebug.selected;"/>
						<s:DropDownList id="CmntFont" left="71" right="10" top="87"
									 change="cmSettings.setStyle('font',CmntFont.selectedItem.data);"
									 enabled="true" selectedIndex="2">
							<mx:ArrayCollection>
								<fx:Object label="黑体" data="simhei"/>
								<fx:Object label="微软雅黑" data="Microsoft Yahei"/>
								<fx:Object label="宋体" data="宋体"/>
							</mx:ArrayCollection>
						</s:DropDownList>
						<s:Label left="10" top="89" text="弹幕字体"/>
						<s:Button id="btnReloadComments" right="10" top="56" label="重新载入弹幕列表"
								   click="cl.reload();" toolTip="强制重新载入所有弹幕"/>
						<s:CheckBox id="CmntBold" left="10" top="120" label="弹幕加粗"
									 click="cmSettings.setStyle('bold',CmntBold.selected);"
									 enabled="true" selected="true"/>
						
						<s:RadioButton id="CmntGlow" left="91" top="120" label="文字阴影"
										groupName="CmntExtra" selected="false" value="highlight"/>
						<s:RadioButton id="CmntShadow" left="172" top="120" label="文字描边"
										groupName="CmntExtra" selected="true" value="border"/>
						<s:RadioButton id="CmntNone" left="253" top="120" label="无"
										groupName="CmntExtra" value="none"/>
						<s:CheckBox id="cfgCPUfriendly" left="10" top="155" label="请对CPU善良些"
									 click="toggleCPUMode();" toolTip="限制同时显示的弹幕数目"/>
						<s:CheckBox id="cfgAvoidSubs" left="127" top="155" label="躲开内嵌字幕"
									 click="toggleHardSubtitle();" toolTip="视频底部向上30像素内弹幕绕行通过"/>
						<s:CheckBox id="showVideo" left="10" top="190" label="显示视频"
									 click="ABPVideo.visible=showVideo.selected;" selected="true"
									 toolTip="关闭视频部分，减少处理器压力"/>
						<s:DropDownList id="videoFilter" left="91" right="10" top="189"
									 change="ABPVideo.filterMode=String(videoFilter.selectedItem.data);"
									 enabled="true" selectedIndex="0">
							<mx:ArrayCollection>
								<fx:Object label="无优化" data="default"/>
								<fx:Object label="增加对比度" data="contrastup"/>
								<fx:Object label="黑白影像" data="blackwhite"/>
								<fx:Object label="增大亮度" data="brighter"/>
								<fx:Object label="只有红色" data="redchannel"/>
								<fx:Object label="只有绿色" data="greenchannel"/>
								<fx:Object label="只有蓝色" data="bluechannel"/>
							</mx:ArrayCollection>
						</s:DropDownList>
						<s:CheckBox id="videoQuality" left="232" top="155" label="高画质"
									 click="ABPVideo.smoothing = videoQuality.selected;"
									 selected="true" toolTip="一些高清视频关闭高画质可以减少处理器负荷同时提高画质"/>
					</s:NavigatorContent>
					<s:NavigatorContent width="100%" height="100%" label="屏蔽设置">
						<s:CheckBox id="CmntShowScroll" left="10" top="10" label="滚动弹幕"
									 click="filterMgr.filterMode(1,CmntShowScroll.selected);"
									 enabled="true" selected="true"/>
						<s:CheckBox id="CmntShowReverse" left="10" top="29" label="逆向弹幕"
									 click="filterMgr.filterMode(6,CmntShowReverse.selected);"
									 enabled="true" selected="true"/>
						<s:CheckBox id="CmntShowTop" top="10" label="顶部弹幕"
									 click="filterMgr.filterMode(5,CmntShowTop.selected);"
									 enabled="true" horizontalCenter="0" selected="true"/>
						<s:CheckBox id="CmntShowBottom" top="29" label="底部弹幕"
									 click="filterMgr.filterMode(4,CmntShowBottom.selected);"
									 enabled="true" horizontalCenter="0" selected="true"/>
						<s:CheckBox id="CmntShowCaptioning" right="10" top="10" label="字幕弹幕"
									 click="filterMgr.filterMode(8,CmntShowCaptioning.selected);"
									 enabled="true" selected="true"/>
						<s:CheckBox id="CmntShowPositioned" right="10" top="30" label="定位弹幕"
									 click="filterMgr.filterMode(7,CmntShowPositioned.selected);"
									 selected="true"/>
						<mx:HRule  left="10" right="10" top="59"/>
						<s:CheckBox id="CmntFilterRemote" left="10" top="69" label="使用远程载入规则"
									 enabled="true" selected="true"/>
						<s:TextInput id="filterDef" left="10" right="123" top="104"/>
						<s:List id="lstRule" left="11" right="10" top="139" bottom="33"
								 dataProvider="{UIFilterList}" selectedIndex="0">
							<s:itemRenderer>
								<fx:Component>
									<s:ItemRenderer>
										<s:states>
											<s:State name="normal" />
											<s:State name="hovered" />
											<s:State name="selected" />
										</s:states>

										<s:Label id="filterLabel" text="{data.filter}" top="5" left="5" right="5" bottom="5"/>
									</s:ItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:List>
						<s:Button id="btnSaveFilter" right="10" top="69" label="保存过滤器规则"/>
						<s:CheckBox id="CmntAutoblock" left="11" bottom="10" label="智能阻止刷屏"/>
						<s:Button id="btnAddRule" right="66" top="104" width="50" label="添加" click="fltaddFilter(filterDef.text);"/>
						<s:Button id="btnDelRule" right="10" top="104" width="50" label="删除" click="deleteFilter();"/>
					</s:NavigatorContent>
					<s:NavigatorContent width="100%" height="100%" label="关于播放器">
						<s:Label left="10" right="10" top="10" fontWeight="bold"
								  text="ABPlayer 弹幕播放器 (Spark)" textDecoration="underline"/>
						<s:Label left="10" right="10" top="32" text="版本：1.0.11 (Yasai Build 13)"/>
						<s:Label left="10" right="10" top="53" text="作者：Jabbany (CQZ) @ Kanoha.org"/>
					</s:NavigatorContent>
				</mx:Accordion>
			</s:NavigatorContent>
			<s:NavigatorContent id="frmPlaylist" width="100%" height="100%" label="播放列表">
				<mx:Accordion left="0" right="0" top="0" bottom="0">
					<mx:Canvas id="PartList" width="100%" height="100%" label="视频分P列表">
						<mx:List left="0" right="0" top="0" bottom="0"></mx:List>
					</mx:Canvas>
					<mx:Canvas width="100%" height="100%" label="相关视频">
						<mx:TileList left="0" right="0" top="0" bottom="0"></mx:TileList>
					</mx:Canvas>
				</mx:Accordion>
			</s:NavigatorContent>
		</mx:TabNavigator>
	</s:Group>
	<s:Group id="ABPCommentform" left="0" right="350" bottom="40" height="30"
			   enabled="false" styleName="Bar">
		<s:Button id="CmntSend" right="4" width="63" height="25" label="发送..." click="cmntSend();"
				   styleName="dmButton" verticalCenter="0"/>
		<s:DropDownList id="CmntType" left="4" width="96" height="25" change="onCommentTypeChange();"
					  enabled="true" selectedIndex="0"
					 styleName="dmCombo" verticalCenter="0">
			<mx:ArrayCollection>
				<fx:Object label="滚动" data="1"/>
				<fx:Object label="顶部" data="5"/>
				<fx:Object label="底部" data="4"/>
				<fx:Object label="逆向" data="6"/>
				<fx:Object label="字幕" data="8"/>
				<fx:Object label="定位" data="7"/>
			</mx:ArrayCollection>
		</s:DropDownList>
		<mx:ColorPicker id="CmntColor" left="104" width="25" height="25" enabled="true"
						selectedColor="#FFFFFF" verticalCenter="0"/>
		<s:TextInput id="CmntText" left="200" right="70" height="25"
					  keyDown="onCommentformKey(event);" verticalCenter="0"/>
		<s:DropDownList id="CmntSize" left="134" width="62" height="25" enabled="true" 
					 selectedIndex="2" verticalCenter="0">
			<mx:ArrayCollection>
				<fx:Object label="特大" data="35"/>
				<fx:Object label="大" data="30"/>
				<fx:Object label="中" data="25"/>
				<fx:Object label="小" data="16"/>
				<fx:Object label="很小" data="10"/>
			</mx:ArrayCollection>
		</s:DropDownList>
	</s:Group>
</s:Application>
